version: '3.8'

services:
  flume-exporter:
    build: .
    container_name: flume-water-exporter
    ports:
      - "8080:8080"
    environment:
      # Flume API Credentials (REQUIRED)
      - FLUME_CLIENT_ID=${FLUME_CLIENT_ID}
      - FLUME_CLIENT_SECRET=${FLUME_CLIENT_SECRET}
      - FLUME_USERNAME=${FLUME_USERNAME}
      - FLUME_PASSWORD=${FLUME_PASSWORD}
      
      # Optional Configuration
      - LISTEN_ADDRESS=:8080
      - METRICS_PATH=/metrics
      
    restart: unless-stopped
    
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Include Prometheus for testing
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - flume-exporter
    restart: unless-stopped

  # Optional: Include Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped

volumes:
  grafana-storage: